/**
 * Zumly v0.9.2
 * Build on 2020-11-07
 * Author Juan Mart√≠n Muda, Copyright MIT
 * https://zumly.org
 */

function checkArray(a){if(a!==void 0&&"none"===a[0].toLowerCase())return!0;if(void 0!==a&&0<a.length){let b=a.map(a=>a.toLowerCase());return(a=>[...new Set(a)])(b).every(a=>-1!==["blur","sepia","saturate"].indexOf(a))}}function setFx(a){var b="",c="";if(void 0!==a)return a.map(a=>{b+=`${"blur"===a.toLowerCase()?"blur(0px) ":"sepia"===a.toLowerCase()?"sepia(0) ":"saturate"===a.toLowerCase()?"saturate(0) ":"none"}`,c+=`${"blur"===a.toLowerCase()?"blur(0.8px) ":"sepia"===a.toLowerCase()?"sepia(5) ":"saturate"===a.toLowerCase()?"saturate(8) ":"none"}`}),[b,c]}function assignProperty(a,b,c){return a[b]=c}function validate(a,b,c,d,e={isRequired:!1,defaultValue:0,allowedValues:0,hasValidation:0,hasAssignFunction:0}){var f=`'${b}' property is required when instance is defined`,g=c!==void 0,h=e.defaultValue!==void 0,i=e.hasValidation!==void 0,j=e.hasAssignFunction!==void 0;if("string"===d||"object"===d||"boolean"===d)var k=typeof c===d,c=k&&"string"===d?c.toLowerCase():c;else"array"===d&&(k=Array.isArray(c));e.isRequired&&(g&&k?assignProperty(a,b,c):notification(!1,f,`error`)),h&&(g&&k?assignProperty(a,b,c):c===void 0?assignProperty(a,b,e.defaultValue):notification(!1,f,`error`)),i&&h&&(g&&k&&e.hasValidation?assignProperty(a,b,c):c===void 0?assignProperty(a,b,e.defaultValue):notification(!1,f,`error`)),i&&h&&j&&(g&&k&&e.hasValidation?assignProperty(a,b,e.hasAssignFunction):c===void 0?assignProperty(a,b,e.defaultValue):notification(!1,f,`error`))}function shimIdleCallBack(a){var b=Date.now();return setTimeout(()=>{a({didTimeout:!1,timeRemaining(){return Math.max(0,50-(Date.now()-b))}})},1)}function prepareCSS(a){var b=document.createElement("style");let c="";["current-view","previous-view","last-view"].map(b=>{c+=`
  .zoom-${b}-${a} {
    -webkit-animation-name: zoom-${b}-${a};
            animation-name: zoom-${b}-${a};
    -webkit-animation-duration: var(--zoom-duration-${a});
            animation-duration: var(--zoom-duration-${a});
    -webkit-animation-timing-function: var(--zoom-ease-${a});
            animation-timing-function: var(--zoom-ease-${a});
  }
  @-webkit-keyframes zoom-${b}-${a} {
    0% {
      transform-origin: var(--${b}-transformOrigin-start-${a});
      transform: var(--${b}-transform-start-${a});
      opacity: var(--${b}-opacity-start-${a});
      filter: var(--${b}-filter-start-${a})
    }
    100% {
      transform-origin: var(--${b}-transformOrigin-end-${a});
      transform: var(--${b}-transform-end-${a});
      opacity: var(--${b}-opacity-end-${a});
      filter: var(--${b}-filter-end-${a})
    }
  }
  @keyframes zoom-${b}-${a} {
    0% {
      transform-origin: var(--${b}-transformOrigin-start-${a});
      transform: var(--${b}-transform-start-${a});
      opacity: var(--${b}-opacity-start-${a});
      filter: var(--${b}-filter-start-${a})
    }
    100% {
      transform-origin: var(--${b}-transformOrigin-end-${a});
      transform: var(--${b}-transform-end-${a});
      opacity: var(--${b}-opacity-end-${a});
      filter: var(--${b}-filter-end-${a})
    }
  }
  `}),b.innerHTML=c,document.head.appendChild(b)}function setCSSVariables(a,b,c){let d=b,e=d.views[0],f=d.views[1],g=d.views[2];[{name:"current-view",stage:e},{name:"previous-view",stage:f},{name:"last-view",stage:g}].map(b=>{"zoomOut"===a&&b.stage!==void 0&&(document.documentElement.style.setProperty(`--${b.name}-transform-start-${c}`,b.stage.forwardState.transform),document.documentElement.style.setProperty(`--${b.name}-transform-end-${c}`,b.stage.backwardState.transform),document.documentElement.style.setProperty(`--${b.name}-transformOrigin-start-${c}`,b.stage.forwardState.origin),document.documentElement.style.setProperty(`--${b.name}-transformOrigin-end-${c}`,b.stage.backwardState.origin),document.documentElement.style.setProperty(`--${b.name}-opacity-start-${c}`,1),document.documentElement.style.setProperty(`--${b.name}-filter-start-${c}`,b.stage.forwardState.filter),document.documentElement.style.setProperty(`--${b.name}-filter-end-${c}`,b.stage.backwardState.filter),"current-view"===b.name?(document.documentElement.style.setProperty(`--zoom-duration-${c}`,b.stage.backwardState.duration),document.documentElement.style.setProperty(`--zoom-ease-${c}`,b.stage.backwardState.ease),document.documentElement.style.setProperty(`--${b.name}-opacity-end-${c}`,0),document.documentElement.style.setProperty(`--${b.name}-filter-start-${c}`,`none`),document.documentElement.style.setProperty(`--${b.name}-filter-end-${c}`,`none`)):document.documentElement.style.setProperty(`--${b.name}-opacity-end-${c}`,1)),"zoomIn"===a&&b.stage!==void 0&&(document.documentElement.style.setProperty(`--${b.name}-transform-start-${c}`,b.stage.backwardState.transform),document.documentElement.style.setProperty(`--${b.name}-transform-end-${c}`,b.stage.forwardState.transform),document.documentElement.style.setProperty(`--${b.name}-transformOrigin-start-${c}`,b.stage.backwardState.origin),document.documentElement.style.setProperty(`--${b.name}-transformOrigin-end-${c}`,b.stage.forwardState.origin),document.documentElement.style.setProperty(`--${b.name}-filter-start-${c}`,b.stage.backwardState.filter),document.documentElement.style.setProperty(`--${b.name}-filter-end-${c}`,b.stage.forwardState.filter),"current-view"===b.name?(document.documentElement.style.setProperty(`--zoom-duration-${c}`,b.stage.forwardState.duration),document.documentElement.style.setProperty(`--zoom-ease-${c}`,b.stage.forwardState.ease),document.documentElement.style.setProperty(`--${b.name}-opacity-start-${c}`,0),document.documentElement.style.setProperty(`--${b.name}-filter-start-${c}`,`none`),document.documentElement.style.setProperty(`--${b.name}-filter-end-${c}`,`none`)):document.documentElement.style.setProperty(`--${b.name}-opacity-start-${c}`,1),document.documentElement.style.setProperty(`--${b.name}-opacity-end-${c}`,1))})}async function renderView(a,b,c,d){return new Promise(e=>{var f=null;f=d?a:a.dataset.to,requestIdleCallback(async()=>{var a=document.createElement("template");a.innerHTML="object"==typeof c[f]&&void 0!==c[f].render?await c[f].render():c[f];let g=a.content.querySelector(".z-view");d?g.classList.add("is-current-view"):(g.classList.add("is-new-current-view"),g.classList.add("has-no-events"),g.classList.add("hide"),g.classList.add("performance")),g.style.transformOrigin=`0 0`,g.dataset.viewName=f;var h=b.append(a.content);"object"==typeof c[f]&&c[f].mounted!==void 0&&"function"==typeof c[f].mounted()?await c[f].mounted():"",e(h)})})}function notification(a,b,c){b&&"welcome"===c&&console.info(`%c Zumly %c ${b}`,`background: #424085; color: white; border-radius: 3px;`,`color: #424085`),b&&a&&("info"===c||c===void 0)&&console.info(`%c Zumly %c ${b}`,`background: #6679A3; color: #304157; border-radius: 3px;`,`color: #6679A3`),b&&"warn"===c&&console.warn(`%c Zumly %c ${b}`,`background: #DCBF53; color: #424085; border-radius: 3px;`,`color: #424085`),b&&"error"===c&&console.error(`%c Zumly %c ${b}`,`background: #BE4747; color: white; border-radius: 3px;`,`color: #424085`)}function checkParameters(a,b){a&&"object"==typeof a?(assignProperty(b,"options",!0),validate(b,"mount",a.mount,"string",{isRequired:!0}),validate(b,"initialView",a.initialView,"string",{isRequired:!0}),validate(b,"views",a.views,"object",{isRequired:!0}),validate(b,"debug",a.debug,"boolean",{defaultValue:!1}),a.transitions&&"object"==typeof a.transitions?(validate(b,"cover",a.transitions.cover,"string",{defaultValue:"width",hasValidation:()=>{-1!==["height","width"].indexOf(a.transitions.cover.toLowerCase())}}),validate(b,"duration",a.transitions.duration,"string",{defaultValue:"1s"}),validate(b,"ease",a.transitions.ease,"string",{defaultValue:"ease-in-out"}),validate(b,"effects",a.transitions.effects,"array",{defaultValue:["none","none"],hasValidation:checkArray(a.transitions.effects),hasAssignFunction:setFx(a.transitions.effects)})):(assignProperty(b,"cover",`width`),assignProperty(b,"duration",`1s`),assignProperty(b,"ease",`ease-in-out`),assignProperty(b,"effects",["none","none"]))):notification(!1,`'options' object has to be provided when instance is defined`,`error`)}window.requestIdleCallback=window.requestIdleCallback||shimIdleCallBack;class Zumly{constructor(a){this.instance=Zumly.counter,this.storedViews=[],this.currentStage=null,this.storedPreviousScale=[1],this.trace=[],this.blockEvents=!1,this.touchstartX=0,this.touchstartY=0,this.touchendX=0,this.touchendY=0,this.touching=!1,checkParameters(a,this),this.options?(this._onZoom=this.onZoom.bind(this),this._onZoomInHandlerStart=this.onZoomInHandlerStart.bind(this),this._onZoomInHandlerEnd=this.onZoomInHandlerEnd.bind(this),this._onZoomOutHandlerStart=this.onZoomOutHandlerStart.bind(this),this._onZoomOutHandlerEnd=this.onZoomOutHandlerEnd.bind(this),this._onTouchStart=this.onTouchStart.bind(this),this._onTouchEnd=this.onTouchEnd.bind(this),this._onKeyUp=this.onKeyUp.bind(this),this._onWeel=this.onWeel.bind(this),this.canvas=document.querySelector(this.mount),this.canvas.setAttribute("tabindex",0),this.canvas.addEventListener("mouseup",this._onZoom,!1),this.canvas.addEventListener("touchend",this._onZoom,!1),this.canvas.addEventListener("touchstart",this._onTouchStart,{passive:!0}),this.canvas.addEventListener("touchend",this._onTouchEnd,!1),this.canvas.addEventListener("keyup",this._onKeyUp,!1),this.canvas.addEventListener("wheel",this._onWeel,{passive:!0})):this.notify(`is unable to start: no {options} have been passed to the Zumly's instance.`,"error")}storeViews(a){this.tracing("storedViews()"),this.storedViews.push(a)}setPreviousScale(a){this.tracing("setPreviousScale()"),this.storedPreviousScale.push(a)}tracing(a){if("ended"===a){let a=this.trace.map((a,b)=>`${0===b?`Instance ${this.instance}: ${a}`:`${a}`}`).join(" > ");this.notify(a),this.trace=[]}else this.trace.push(a)}static get counter(){return Zumly._counter=(Zumly._counter||0)+1,Zumly._counter}notify(a,b){return notification(this.debug,a,b)}zoomLevel(){return this.storedViews.length}async init(){this.options&&(this.tracing("init()"),prepareCSS(this.instance),await renderView(this.initialView,this.canvas,this.views,"init"),this.storeViews({zoomLevel:this.storedViews.length,views:[{viewName:this.initialView,backwardState:{origin:"0 0",transform:""}}]}),this.notify(`${1<this.instance?`instance n¬∫ ${this.instance} is active.`:`is running! Instance n¬∫ ${this.instance} is active. ${this.debug?`Debug is active, can be deactivate by setting 'debug: false' when you define the instance.`:""}
        More tips & docs at https://zumly.org`}`,"welcome"))}async zoomIn(a){this.tracing("zoomIn()");var b=this.instance;let c=this.canvas,d=c.getBoundingClientRect();var e=d.left,f=d.top;let g=this.storedPreviousScale[this.storedPreviousScale.length-1];this.tracing("renderView()"),await renderView(a,c,this.views),a.classList.add("zoomed");let h=a.getBoundingClientRect();var i=c.querySelector(".is-new-current-view"),j=c.querySelector(".is-current-view"),k=c.querySelector(".is-previous-view"),l=c.querySelector(".is-last-view");null!==l&&c.removeChild(l);let m=i.getBoundingClientRect(),n=m.width/h.width,o=m.height/h.height;var p=a.dataset.withDuration||this.duration,q=a.dataset.withEease||this.ease,r=this.effects[0],s=this.effects[1],t=this.cover;if("width"===t)var u=n,v=1/n;else"height"===t&&(u=o,v=1/o);this.setPreviousScale(u);var w=`translate(${h.x-e+(h.width-m.width*v)/2}px, ${h.y-f+(h.height-m.height*v)/2}px) scale(${v})`;i.style.transform=w,j.classList.add("is-previous-view"),j.classList.remove("is-current-view");let z=j.getBoundingClientRect();var A=j.style.transform;j.style.transformOrigin=`${h.x+h.width/2-z.x}px ${h.y+h.height/2-z.y}px`;let B=d.width/2-h.width/2-h.x+z.x,x=d.height/2-h.height/2-h.y+z.y,y=`translate(${B}px, ${x}px) scale(${u})`;j.style.transform=y;var C=a.getBoundingClientRect(),D=`translate(${C.x-e+(C.width-m.width)/2}px, ${C.y-f+(C.height-m.height)/2}px)`;if(null!==k){k.classList.remove("is-previous-view"),k.classList.add("is-last-view");var E=k.style.transform,F=j.getBoundingClientRect();k.style.transform=`translate(${B-e}px, ${x-f}px) scale(${u*g})`;let a=k.querySelector(".zoomed");var G=a.getBoundingClientRect();k.style.transform=E,j.style.transform=A;var H=j.getBoundingClientRect(),I=`translate(${d.width/2-h.width/2-h.x+(H.x-G.x)+F.x-e+(F.width-G.width)/2}px, ${d.height/2-h.height/2-h.y+(H.y-G.y)+F.y-f+(F.height-G.height)/2}px) scale(${u*g})`}else j.style.transform=A;var J={zoomLevel:this.storedViews.length,views:[]};let K=i?{viewName:i.dataset.viewName,backwardState:{origin:i.style.transformOrigin,duration:p,ease:q,transform:w,filter:r},forwardState:{origin:i.style.transformOrigin,duration:p,ease:q,transform:D,filter:s}}:null,L=j?{viewName:j.dataset.viewName,backwardState:{origin:j.style.transformOrigin,duration:p,ease:q,transform:A,filter:getComputedStyle(document.documentElement).getPropertyValue(`--previous-view-filter-end-${b}`)},forwardState:{origin:j.style.transformOrigin,duration:p,ease:q,transform:y,filter:s}}:null,M=k?{viewName:k.dataset.viewName,backwardState:{origin:k.style.transformOrigin,duration:p,ease:q,transform:E,filter:getComputedStyle(document.documentElement).getPropertyValue(`--previous-view-filter-end-${b}`)},forwardState:{origin:k.style.transformOrigin,duration:p,ease:q,transform:I,filter:s}}:null,N=l?{viewName:l}:null;null!==K&&J.views.push(K),null!==L&&J.views.push(L),null!==M&&J.views.push(M),null!==N&&J.views.push(N),this.storeViews(J),this.currentStage=this.storedViews[this.storedViews.length-1],this.tracing("setCSSVariables()"),setCSSVariables("zoomIn",this.currentStage,this.instance),j.classList.add("performance"),null!==k&&k.classList.add("performance"),i.classList.remove("hide"),i.addEventListener("animationstart",this._onZoomInHandlerStart),i.addEventListener("animationend",this._onZoomInHandlerEnd),j.addEventListener("animationend",this._onZoomInHandlerEnd),null!==k&&k.addEventListener("animationend",this._onZoomInHandlerEnd),i.classList.add(`zoom-current-view-${b}`),j.classList.add(`zoom-previous-view-${b}`),null!==k&&k.classList.add(`zoom-last-view-${b}`)}zoomOut(){this.tracing("zoomOut()"),this.blockEvents=!0,this.storedPreviousScale.pop();var a=this.instance;const b=this.canvas;this.currentStage=this.storedViews[this.storedViews.length-1];let c=this.currentStage.views[3];var d=b.querySelector(".is-current-view"),e=b.querySelector(".is-previous-view"),f=b.querySelector(".is-last-view");if(this.tracing("setCSSVariables()"),setCSSVariables("zoomOut",this.currentStage,this.instance),d.classList.remove("performance"),e.querySelector(".zoomed").classList.remove("zoomed"),e.classList.remove("is-previous-view"),e.classList.add("is-current-view"),e.classList.remove("performance"),null!==f&&(f.classList.add("performance"),f.classList.add("is-previous-view"),f.classList.remove("is-last-view"),f.classList.remove("hide")),void 0!==c){b.prepend(c.viewName);var g=b.querySelector(".z-view:first-child");g.classList.add("hide")}d.addEventListener("animationstart",this._onZoomOutHandlerStart),d.addEventListener("animationend",this._onZoomOutHandlerEnd),e.addEventListener("animationend",this._onZoomOutHandlerEnd),null!==f&&f.addEventListener("animationend",this._onZoomOutHandlerEnd),d.classList.add(`zoom-current-view-${a}`),e.classList.add(`zoom-previous-view-${a}`),null!==f&&f.classList.add(`zoom-last-view-${a}`),this.storedViews.pop()}onZoom(a){!(1<this.storedViews.length)||this.blockEvents||a.target.classList.contains("zoom-me")||null!==a.target.closest(".is-current-view")||this.touching||(this.tracing("onZoom()"),a.stopPropagation(),this.zoomOut()),this.blockEvents||!a.target.classList.contains("zoom-me")||this.touching||(this.tracing("onZoom()"),a.stopPropagation(),this.zoomIn(a.target))}onKeyUp(a){this.tracing("onKeyUp()"),("ArrowLeft"===a.key||"ArrowDown"===a.key)&&(a.preventDefault(),1<this.storedViews.length&&!this.blockEvents?this.zoomOut():this.notify(`is on level zero. Can't zoom out. Trigger: ${a.key}`,"warn")),("ArrowRight"===a.key||"ArrowUp"===a.key)&&(a.preventDefault(),this.notify(a.key+"has not actions defined"))}onWeel(a){if(!this.blockEvents){if(this.tracing("onWeel()"),0>a.deltaY);0<a.deltaY&&(1<this.storedViews.length&&!this.blockEvents?this.zoomOut():this.notify("is on level zero. Can't zoom out. Trigger: wheel/scroll","warn"))}}onTouchStart(a){this.tracing("onTouchStart()"),this.touching=!0,this.touchstartX=a.changedTouches[0].screenX,this.touchstartY=a.changedTouches[0].screenY}onTouchEnd(a){this.blockEvents||(this.tracing("onTouchEnd()"),this.touchendX=a.changedTouches[0].screenX,this.touchendY=a.changedTouches[0].screenY,this.handleGesture(a))}handleGesture(a){a.stopPropagation(),this.tracing("handleGesture()"),this.touchendX<this.touchstartX-30&&(1<this.storedViews.length&&!this.blockEvents?(this.tracing("swipe left"),this.zoomOut()):this.notify("is on level zero. Can't zoom out. Trigger: Swipe left","warn")),this.touchendY<this.touchstartY-10&&(1<this.storedViews.length&&!this.blockEvents?this.tracing("swipe up"):this.notify("is on level zero. Can't zoom out. Trigger: Swipe up","warn")),this.touchendY===this.touchstartY&&!this.blockEvents&&a.target.classList.contains("zoom-me")&&this.touching&&(this.touching=!1,this.tracing("tap"),a.preventDefault(),this.zoomIn(a.target)),this.touchendY===this.touchstartY&&1<this.storedViews.length&&!this.blockEvents&&!a.target.classList.contains("zoom-me")&&null===a.target.closest(".is-current-view")&&this.touching&&(this.touching=!1,this.tracing("tap"),this.zoomOut())}onZoomOutHandlerStart(a){this.tracing("onZoomOutHandlerStart()"),this.blockEvents=!0,a.target.removeEventListener("animationstart",this._onZoomOutHandlerStart)}onZoomOutHandlerEnd(a){this.tracing("onZoomOutHandlerEnd()");let b=a.target;var c=this.currentStage;if(b.removeEventListener("animationend",this._onZoomOutHandlerEnd),b.classList.contains(`zoom-current-view-${this.instance}`)&&(this.canvas.removeChild(b),this.blockEvents=!1),b.classList.contains(`zoom-previous-view-${this.instance}`)){var d=c.views[1].backwardState.origin,e=c.views[1].backwardState.transform;b.classList.remove("performance"),b.classList.remove(`zoom-previous-view-${this.instance}`),b.style.transformOrigin=d,b.style.transform=e,b.style.filter="none",2===c.views.length?this.tracing("ended"):""}b.classList.contains(`zoom-last-view-${this.instance}`)&&(d=c.views[2].backwardState.origin,e=c.views[2].backwardState.transform,b.classList.remove("performance"),b.classList.remove(`zoom-last-view-${this.instance}`),b.style.transformOrigin=d,b.style.transform=e,2<c.views.length?this.tracing("ended"):"")}onZoomInHandlerStart(a){this.tracing("onZoomInHandlerStart()"),this.blockEvents=!0,a.target.removeEventListener("animationstart",this._onZoomInHandlerStart)}onZoomInHandlerEnd(a){this.tracing("onZoomInHandlerEnd()");let b=a.target;var c=this.currentStage;if(a.target.classList.contains("is-new-current-view")){this.blockEvents=!1;var d="current-view",e=c.views[0].forwardState.transform,f=c.views[0].forwardState.origin;b.classList.remove("is-new-current-view"),b.classList.add("is-current-view")}else a.target.classList.contains("is-previous-view")?(d="previous-view",e=c.views[1].forwardState.transform,f=c.views[1].forwardState.origin,2===c.views.length?this.tracing("ended"):""):(d="last-view",e=c.views[2].forwardState.transform,f=c.views[2].forwardState.origin,2<c.views.length?this.tracing("ended"):"");b.classList.remove("performance"),b.classList.remove(`zoom-${d}-${this.instance}`),b.classList.remove("has-no-events"),b.style.transformOrigin=f,b.style.transform=e,b.style.filter=getComputedStyle(document.documentElement).getPropertyValue(`--${d}-filter-end-${this.instance}`),b.removeEventListener("animationend",this._onZoomInHandlerEnd)}}export default Zumly;
